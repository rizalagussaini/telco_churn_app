{
    "sourceFile": "app.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1748222103836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1748222103836,
            "name": "Commit-0",
            "content": "import streamlit as st\r\nimport pandas as pd\r\nimport joblib\r\n\r\n# Load model\r\nmodel = joblib.load('catboost_model.pkl')\r\n\r\nst.title(\"📊 Prediksi Pelanggan Berhenti Berlangganan (Churn) Telco\")\r\n\r\nst.markdown(\"\"\"\r\nAplikasi ini digunakan untuk memprediksi apakah pelanggan akan **berhenti berlangganan (churn)** dari layanan Telco berdasarkan data langganan.\r\nSilakan isi formulir di samping untuk melihat hasil prediksi. 👇\r\n\"\"\")\r\n\r\nst.sidebar.header(\"📝 Isi Data Pelanggan\")\r\n\r\ndef user_input():\r\n    SeniorCitizen = st.sidebar.radio(\r\n        \"Apakah pelanggan berusia 60 tahun ke atas?\", \r\n        ['Iya', 'Tidak']\r\n    )\r\n    Partner = st.sidebar.radio(\r\n        \"Memiliki pasangan (suami/istri)?\", \r\n        ['Iya', 'Tidak']\r\n    )\r\n    Dependents = st.sidebar.radio(\r\n        \"Memiliki tanggungan (anak/orang tua)?\", \r\n        ['Iya', 'Tidak']\r\n    )\r\n    PhoneService = st.sidebar.radio(\r\n        \"Menggunakan layanan telepon rumah?\", \r\n        ['Iya', 'Tidak'],\r\n        help=\"Telepon rumah berarti layanan dasar panggilan suara dari penyedia Telco.\"\r\n    )\r\n    MultipleLines = st.sidebar.selectbox(\r\n        \"Layanan telepon ganda (lebih dari satu jalur)?\", \r\n        ['Tidak ada layanan telepon', 'Iya', 'Tidak']\r\n    )\r\n    InternetService = st.sidebar.selectbox(\r\n        \"Jenis layanan internet\", \r\n        ['DSL', 'Fiber optic', 'Tidak berlangganan internet']\r\n    )\r\n    OnlineSecurity = st.sidebar.selectbox(\r\n        \"Keamanan online\", \r\n        ['Iya', 'Tidak', 'Tidak ada layanan internet']\r\n    )\r\n    OnlineBackup = st.sidebar.selectbox(\r\n        \"Backup online\", \r\n        ['Iya', 'Tidak', 'Tidak ada layanan internet']\r\n    )\r\n    DeviceProtection = st.sidebar.selectbox(\r\n        \"Perlindungan perangkat\", \r\n        ['Iya', 'Tidak', 'Tidak ada layanan internet']\r\n    )\r\n    TechSupport = st.sidebar.selectbox(\r\n        \"Bantuan teknis\", \r\n        ['Iya', 'Tidak', 'Tidak ada layanan internet']\r\n    )\r\n    StreamingTV = st.sidebar.selectbox(\r\n        \"Layanan streaming TV\", \r\n        ['Iya', 'Tidak', 'Tidak ada layanan internet']\r\n    )\r\n    StreamingMovies = st.sidebar.selectbox(\r\n        \"Layanan streaming film\", \r\n        ['Iya', 'Tidak', 'Tidak ada layanan internet']\r\n    )\r\n    Contract = st.sidebar.selectbox(\r\n        \"Jenis kontrak berlangganan\", \r\n        ['1 bulan', '1 tahun', '2 tahun']\r\n    )\r\n    PaperlessBilling = st.sidebar.radio(\r\n        \"Menggunakan tagihan tanpa kertas?\", \r\n        ['Iya', 'Tidak']\r\n    )\r\n    PaymentMethod = st.sidebar.selectbox(\r\n        \"Metode pembayaran\", \r\n        ['Cek elektronik', 'Cek pos', 'Transfer otomatis (Bank)', 'Kartu kredit otomatis']\r\n    )\r\n\r\n    monthly_rp = st.sidebar.number_input(\"Biaya bulanan (Rp)\", min_value=0.0, value=160000.0, step=1000.0)\r\n    total_rp = st.sidebar.number_input(\"Total biaya selama ini (Rp)\", min_value=0.0, value=1600000.0, step=1000.0)\r\n\r\n    # Format tampilan mata uang\r\n    st.sidebar.markdown(f\"**➡️ Biaya Bulanan:** Rp {monthly_rp:,.0f}\".replace(\",\", \".\"))\r\n    st.sidebar.markdown(f\"**➡️ Total Biaya:** Rp {total_rp:,.0f}\".replace(\",\", \".\"))\r\n    st.sidebar.caption(\"💡 Biaya dikonversi otomatis ke USD dengan kurs Rp16.000 per USD untuk keperluan model.\")\r\n\r\n    \r\n\r\n\r\n    # Validasi sederhana\r\n    if total_rp < monthly_rp:\r\n        st.sidebar.warning(\"⚠️ Total biaya tidak boleh lebih kecil dari biaya bulanan.\")\r\n\r\n    # Konversi ke USD\r\n    MonthlyCharges = monthly_rp / 16000\r\n    TotalCharges = total_rp / 16000\r\n    # Tambahkan baris berikut:\r\n    st.sidebar.markdown(f\"**➡️ Biaya Bulanan (USD):** ${MonthlyCharges:.2f}\")\r\n    st.sidebar.markdown(f\"**➡️ Total Biaya (USD):** ${TotalCharges:.2f}\")\r\n\r\n    tenure_group = st.sidebar.selectbox(\"Lama berlangganan (bulan)\", [\r\n        '1 - 12', '13 - 24', '25 - 36', '37 - 48', '49 - 60', '61 - 72'\r\n    ])\r\n\r\n    data = {\r\n        'SeniorCitizen': 1 if SeniorCitizen == 'Iya' else 0,\r\n        'Partner': Partner,\r\n        'Dependents': Dependents,\r\n        'PhoneService': PhoneService,\r\n        'MultipleLines': MultipleLines,\r\n        'InternetService': InternetService,\r\n        'OnlineSecurity': OnlineSecurity,\r\n        'OnlineBackup': OnlineBackup,\r\n        'DeviceProtection': DeviceProtection,\r\n        'TechSupport': TechSupport,\r\n        'StreamingTV': StreamingTV,\r\n        'StreamingMovies': StreamingMovies,\r\n        'Contract': 'Month-to-month' if Contract == '1 bulan' else ('One year' if Contract == '1 tahun' else 'Two year'),\r\n        'PaperlessBilling': PaperlessBilling,\r\n        'PaymentMethod': (\r\n            'Electronic check' if PaymentMethod == 'Cek elektronik' else\r\n            'Mailed check' if PaymentMethod == 'Cek pos' else\r\n            'Bank transfer (automatic)' if PaymentMethod == 'Transfer otomatis (Bank)' else\r\n            'Credit card (automatic)'\r\n        ),\r\n        'MonthlyCharges': MonthlyCharges,\r\n        'TotalCharges': TotalCharges,\r\n        'tenure_group': tenure_group\r\n    }\r\n\r\n    return pd.DataFrame([data])\r\n\r\n# Ambil input\r\ninput_df = user_input()\r\n\r\n# One-hot encoding\r\ninput_encoded = pd.get_dummies(input_df)\r\n\r\n# Pastikan semua fitur sesuai dengan yang digunakan saat pelatihan model\r\nmodel_features = model.get_booster().feature_names\r\nfor col in set(model_features) - set(input_encoded.columns):\r\n    input_encoded[col] = 0\r\ninput_encoded = input_encoded[model_features]\r\n\r\n# Tombol prediksi\r\nif st.button(\"🔍 Prediksi Sekarang\"):\r\n    prediction = model.predict(input_encoded)\r\n    proba = model.predict_proba(input_encoded)\r\n\r\n    st.subheader(\"🔍 Hasil Prediksi\")\r\n    if prediction[0] == 1:\r\n        st.error(\"🚫 Pelanggan **berisiko tinggi berhenti berlangganan** (*Churn*)\")\r\n        st.write(\"**Tingkat probabilitas pelanggan berhenti (churn):**\", f\"{proba[0][1]*100:.2f}%\")\r\n\r\n        st.markdown(\"### 💡 Rekomendasi:\")\r\n        st.markdown(\"\"\"\r\n        - Berikan promo atau diskon khusus untuk meningkatkan loyalitas.\r\n        - Tawarkan kontrak jangka panjang dengan manfaat eksklusif.\r\n        - Hubungi pelanggan untuk memahami keluhan atau kebutuhan mereka.\r\n        \"\"\")\r\n\r\n    else:\r\n        st.success(\"✅ Pelanggan **kemungkinan besar tetap berlangganan**\")\r\n        st.write(\"**Tingkat probabilitas pelanggan berhenti (churn):**\", f\"{proba[0][1]*100:.2f}%\")\r\n\r\n        st.markdown(\"### 💡 Rekomendasi:\")\r\n        st.markdown(\"\"\"\r\n        - Pertahankan kualitas layanan yang sudah baik.\r\n        - Kirimkan ucapan terima kasih atau hadiah loyalitas.\r\n        - Lakukan survei berkala untuk menjaga kepuasan pelanggan.\r\n        \"\"\")\r\n\r\n"
        }
    ]
}